'use client'
import { jsxs, jsx } from 'react/jsx-runtime';
import '@dynamic-labs/sdk-api-core';
import '../../utils/constants/values.js';
import '@dynamic-labs/utils';
import '../../../../_virtual/_tslib.js';
import '@dynamic-labs/multi-wallet';
import '../../shared/logger.js';
import '../../utils/constants/colors.js';
import 'react-international-phone';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../context/ViewContext/ViewContext.js';
import 'react';
import '@dynamic-labs/wallet-book';
import '../../store/state/loadingAndLifecycle.js';
import '../../shared/consts/index.js';
import { pixelToRem } from '../../utils/functions/pixelToRem/pixelToRem.js';
import '../../config/ApiEndpoint.js';
import '../../store/state/user/user.js';
import '../../locale/locale.js';
import '../../store/state/projectSettings/projectSettings.js';
import { classNames } from '../../utils/functions/classNames/classNames.js';
import { StatusDot } from '../StatusDot/StatusDot.js';

const IconWithStatus = ({ Icon, InnerIcon, containerClassName, iconSize = 16, variant = 'green', }) => (jsxs("div", { className: classNames('icon-with-status__container', containerClassName || ''), children: [typeof Icon === 'string' ? (jsx("img", { style: {
                height: pixelToRem(iconSize),
                width: pixelToRem(iconSize),
            }, src: Icon, alt: '', className: 'icon' })) : (jsx(Icon, { style: {
                height: pixelToRem(iconSize),
                width: pixelToRem(iconSize),
            } })), InnerIcon ? (jsx("div", { className: 'inner-icon__container', children: jsx("div", { className: classNames('inner-icon', `inner-icon--${variant}`), children: jsx(InnerIcon, {}) }) })) : (jsx(StatusDot, { variant: variant, containerClassName: 'icon-with-status__status-dot' }))] }));

export { IconWithStatus };
