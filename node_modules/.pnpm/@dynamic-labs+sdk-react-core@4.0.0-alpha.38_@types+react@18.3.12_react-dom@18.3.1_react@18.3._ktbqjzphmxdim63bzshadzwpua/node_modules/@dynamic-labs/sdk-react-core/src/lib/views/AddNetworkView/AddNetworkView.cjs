'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var reactI18next = require('react-i18next');
require('react');
require('../../events/dynamicEvents.cjs');
require('../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/utils');
require('../../context/DynamicContext/DynamicContext.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../shared/logger.cjs');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../context/ViewContext/ViewContext.cjs');
var error = require('../../shared/assets/error.cjs');
require('@dynamic-labs/wallet-book');
require('../../utils/constants/colors.cjs');
require('../../utils/constants/values.cjs');
require('../../store/state/loadingAndLifecycle.cjs');
require('../../shared/consts/index.cjs');
require('../../context/CaptchaContext/CaptchaContext.cjs');
require('../../context/ErrorContext/ErrorContext.cjs');
require('@dynamic-labs/multi-wallet');
require('react-international-phone');
require('../../config/ApiEndpoint.cjs');
require('../../store/state/user/user.cjs');
require('../../locale/locale.cjs');
require('../../store/state/projectSettings/projectSettings.cjs');
require('../../context/AccessDeniedContext/AccessDeniedContext.cjs');
require('../../context/AccountExistsContext/AccountExistsContext.cjs');
require('../../context/UserWalletsContext/UserWalletsContext.cjs');
require('../../store/state/environmentId.cjs');
require('../../context/VerificationContext/VerificationContext.cjs');
require('react-dom');
require('../../utils/functions/compareChains/compareChains.cjs');
require('../../context/WalletContext/WalletContext.cjs');
require('../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.cjs');
require('../../context/ThemeContext/ThemeContext.cjs');
require('../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.cjs');
var useMutation = require('../../utils/hooks/useMutation/useMutation.cjs');
require('@dynamic-labs/types');
require('../../context/LoadingContext/LoadingContext.cjs');
require('yup');
require('../../context/MockContext/MockContext.cjs');
require('../CollectUserDataView/useFields.cjs');
require('../../context/FieldsStateContext/FieldsStateContext.cjs');
require('../../context/UserFieldEditorContext/UserFieldEditorContext.cjs');
require('@dynamic-labs/rpc-providers');
require('../../store/state/walletConnectorOptions.cjs');
require('../../components/Accordion/components/AccordionItem/AccordionItem.cjs');
require('../../components/Alert/Alert.cjs');
var Typography = require('../../components/Typography/Typography.cjs');
var Button = require('../../components/Button/Button.cjs');
require('../../components/ShadowDOM/ShadowDOM.cjs');
require('../../components/IconButton/IconButton.cjs');
var IconWithStatus = require('../../components/IconWithStatus/IconWithStatus.cjs');
require('../../components/InlineWidget/InlineWidget.cjs');
require('../../components/Input/Input.cjs');
require('../../components/IsBrowser/IsBrowser.cjs');
require('../../components/MenuList/Dropdown/Dropdown.cjs');
require('../../components/OverlayCard/OverlayCard.cjs');
require('../../components/Transition/ZoomTransition/ZoomTransition.cjs');
require('../../components/Transition/SlideInUpTransition/SlideInUpTransition.cjs');
require('../../components/Transition/OpacityTransition/OpacityTransition.cjs');
var ModalHeader = require('../../components/ModalHeader/ModalHeader.cjs');
require('../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.cjs');
require('../../components/Popper/Popper/Popper.cjs');
require('../../components/Popper/PopperContext/PopperContext.cjs');
require('react-focus-lock');
require('qrcode');
require('formik');
require('../../context/FooterAnimationContext/index.cjs');
require('../../context/WalletGroupContext/WalletGroupContext.cjs');
require('../../context/IpConfigurationContext/IpConfigurationContext.cjs');
require('../../context/SocialRedirectContext/SocialRedirectContext.cjs');
require('../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.cjs');
require('@hcaptcha/react-hcaptcha');
require('../../widgets/DynamicWidget/context/DynamicWidgetContext.cjs');
require('../../context/PasskeyContext/PasskeyContext.cjs');
require('../../store/state/sendBalances.cjs');
require('../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.cjs');
require('../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.cjs');
require('../TransactionConfirmationView/TransactionConfirmationView.cjs');
require('../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.cjs');
require('../../../index.cjs');
require('../../store/state/tokenBalances.cjs');
require('../../shared/utils/functions/getInitialUrl/getInitialUrl.cjs');

const AddNetworkView = ({ walletConnector, network, addNetworkMutation, onCancel, onNetworkAdded, }) => {
    const { t } = reactI18next.useTranslation();
    const { iconUrls, name } = network;
    const [iconUrl] = iconUrls;
    const { mutate: addNetwork } = useMutation.useMutation(addNetworkMutation, {
        onSuccess: onNetworkAdded,
    });
    const NetworkIcon = (props) => (jsxRuntime.jsx("img", Object.assign({}, props, { src: iconUrl, className: 'add-network-view__network-icon', alt: `${name} icon` })));
    return (jsxRuntime.jsxs("div", { "data-testid": 'add-network-view', className: 'add-network-view', children: [jsxRuntime.jsx(ModalHeader.ModalHeader, { alignContent: 'bottom' }), jsxRuntime.jsxs("div", { className: 'add-network-view__body', children: [jsxRuntime.jsx(IconWithStatus.IconWithStatus, { Icon: NetworkIcon, iconSize: 64, InnerIcon: error.ReactComponent, variant: 'red' }), jsxRuntime.jsxs("div", { className: 'add-network-view__text-container', children: [jsxRuntime.jsx(Typography.Typography, { weight: 'bold', variant: 'body_normal', color: 'primary', copykey: 'dyn_add_network_view.title', className: 'add-network-view__title', children: t('dyn_add_network_view.title') }), jsxRuntime.jsx(Typography.Typography, { weight: 'regular', variant: 'body_small', color: 'secondary', copykey: 'dyn_add_network_view.description', className: 'add-network-view__description', children: t('dyn_add_network_view.description', {
                                    name: walletConnector.metadata.name,
                                }) })] }), jsxRuntime.jsxs("div", { className: 'add-network-view__actions', children: [jsxRuntime.jsx(Button.Button, { expanded: true, buttonVariant: 'primary', onClick: () => onCancel(), dataTestId: 'add-network-view__cancel-button', children: jsxRuntime.jsx(Typography.Typography, { copykey: 'dyn_add_network_view.cancel_button.title', children: t('dyn_add_network_view.cancel_button.title') }) }), jsxRuntime.jsx(Button.Button, { expanded: true, buttonVariant: 'brand-primary', onClick: () => addNetwork(), children: jsxRuntime.jsx(Typography.Typography, { copykey: 'dyn_add_network_view.add_button.title', children: t('dyn_add_network_view.add_button.title') }) })] })] })] }));
};

exports.AddNetworkView = AddNetworkView;
