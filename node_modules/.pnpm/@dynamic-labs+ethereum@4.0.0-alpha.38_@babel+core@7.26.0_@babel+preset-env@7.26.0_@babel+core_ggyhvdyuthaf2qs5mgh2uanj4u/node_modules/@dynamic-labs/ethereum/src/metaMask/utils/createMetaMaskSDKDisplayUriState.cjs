'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../_virtual/_tslib.cjs');

/**
 * Listens for the `display_uri` event emitted by the MetaMask SDK.
 *
 * The `display_uri` event is triggered during SDK initialization or when the `connect` method is called.
 * Calling `terminate` in the MetaMask SDK resets the connection, and a new `display_uri` will only be emitted
 * when `connect` is called again.
 *
 * This function manages the new `display_uri` received from these events.
 */
const createMetaMaskSDKDisplayUriState = (metaMaskSDK) => {
    let lastKnownMetaMaskDeepLinkUri = null;
    let displayUri = null;
    metaMaskSDK.on('display_uri', (latestDisplayUri) => {
        if (lastKnownMetaMaskDeepLinkUri !== latestDisplayUri) {
            lastKnownMetaMaskDeepLinkUri = latestDisplayUri;
            displayUri = latestDisplayUri.trim();
        }
    });
    return {
        consumeDisplayUri: () => _tslib.__awaiter(void 0, void 0, void 0, function* () {
            const currentDisplayUri = displayUri;
            if (currentDisplayUri) {
                displayUri = null;
                return currentDisplayUri;
            }
            return new Promise((resolve) => {
                let timeoutId = null;
                let intervalId = null;
                const cleanUp = () => {
                    if (timeoutId)
                        clearTimeout(timeoutId);
                    if (intervalId)
                        clearInterval(intervalId);
                };
                timeoutId = setTimeout(() => {
                    cleanUp();
                    resolve(undefined);
                }, 1000);
                intervalId = setInterval(() => {
                    if (displayUri) {
                        cleanUp();
                        resolve(displayUri);
                        displayUri = null;
                    }
                }, 10);
            });
        }),
    };
};

exports.createMetaMaskSDKDisplayUriState = createMetaMaskSDKDisplayUriState;
