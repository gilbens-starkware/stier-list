'use client'
import { jsxs, jsx } from 'react/jsx-runtime';
import { useTranslation } from 'react-i18next';
import 'react';
import '../../events/dynamicEvents.js';
import '../../../../_virtual/_tslib.js';
import '@dynamic-labs/utils';
import '../../context/DynamicContext/DynamicContext.js';
import '@dynamic-labs/sdk-api-core';
import '../../shared/logger.js';
import '@dynamic-labs/iconic';
import '@dynamic-labs/wallet-connector-core';
import '../../context/ViewContext/ViewContext.js';
import { ReactComponent as SvgError } from '../../shared/assets/error.js';
import '@dynamic-labs/wallet-book';
import '../../utils/constants/colors.js';
import '../../utils/constants/values.js';
import '../../store/state/loadingAndLifecycle.js';
import '../../shared/consts/index.js';
import '../../context/CaptchaContext/CaptchaContext.js';
import '../../context/ErrorContext/ErrorContext.js';
import '@dynamic-labs/multi-wallet';
import 'react-international-phone';
import '../../config/ApiEndpoint.js';
import '../../store/state/user/user.js';
import '../../locale/locale.js';
import '../../store/state/projectSettings/projectSettings.js';
import '../../context/AccessDeniedContext/AccessDeniedContext.js';
import '../../context/AccountExistsContext/AccountExistsContext.js';
import '../../context/UserWalletsContext/UserWalletsContext.js';
import '../../store/state/environmentId.js';
import '../../context/VerificationContext/VerificationContext.js';
import 'react-dom';
import '../../utils/functions/compareChains/compareChains.js';
import '../../context/WalletContext/WalletContext.js';
import '../../utils/hooks/useEmbeddedWallet/useSecureEnclaveEmbeddedWallet/constants.js';
import '../../context/ThemeContext/ThemeContext.js';
import '../../utils/hooks/useUserUpdateRequest/useUpdateUser/userFieldsSchema.js';
import { useMutation } from '../../utils/hooks/useMutation/useMutation.js';
import '@dynamic-labs/types';
import '../../context/LoadingContext/LoadingContext.js';
import 'yup';
import '../../context/MockContext/MockContext.js';
import '../CollectUserDataView/useFields.js';
import '../../context/FieldsStateContext/FieldsStateContext.js';
import '../../context/UserFieldEditorContext/UserFieldEditorContext.js';
import '@dynamic-labs/rpc-providers';
import '../../store/state/walletConnectorOptions.js';
import '../../components/Accordion/components/AccordionItem/AccordionItem.js';
import '../../components/Alert/Alert.js';
import { Typography } from '../../components/Typography/Typography.js';
import { Button } from '../../components/Button/Button.js';
import '../../components/ShadowDOM/ShadowDOM.js';
import '../../components/IconButton/IconButton.js';
import { IconWithStatus } from '../../components/IconWithStatus/IconWithStatus.js';
import '../../components/InlineWidget/InlineWidget.js';
import '../../components/Input/Input.js';
import '../../components/IsBrowser/IsBrowser.js';
import '../../components/MenuList/Dropdown/Dropdown.js';
import '../../components/OverlayCard/OverlayCard.js';
import '../../components/Transition/ZoomTransition/ZoomTransition.js';
import '../../components/Transition/SlideInUpTransition/SlideInUpTransition.js';
import '../../components/Transition/OpacityTransition/OpacityTransition.js';
import { ModalHeader } from '../../components/ModalHeader/ModalHeader.js';
import '../../components/PasskeyCreatedSuccessBanner/PasskeyCreatedSuccessBanner.js';
import '../../components/Popper/Popper/Popper.js';
import '../../components/Popper/PopperContext/PopperContext.js';
import 'react-focus-lock';
import 'qrcode';
import 'formik';
import '../../context/FooterAnimationContext/index.js';
import '../../context/WalletGroupContext/WalletGroupContext.js';
import '../../context/IpConfigurationContext/IpConfigurationContext.js';
import '../../context/SocialRedirectContext/SocialRedirectContext.js';
import '../../widgets/DynamicBridgeWidget/views/WalletsView/components/SecondaryWallets/SecondaryWallets.js';
import '@hcaptcha/react-hcaptcha';
import '../../widgets/DynamicWidget/context/DynamicWidgetContext.js';
import '../../context/PasskeyContext/PasskeyContext.js';
import '../../store/state/sendBalances.js';
import '../../components/OverlayCardBase/OverlayCardTarget/OverlayCardTarget.js';
import '../../widgets/DynamicWidget/components/DynamicWidgetHeader/DynamicWidgetHeader.js';
import '../TransactionConfirmationView/TransactionConfirmationView.js';
import '../../widgets/DynamicWidget/views/ManagePasskeysWidgetView/PasskeyCard/PasskeyCard.js';
import '../../../index.js';
import '../../store/state/tokenBalances.js';
import '../../shared/utils/functions/getInitialUrl/getInitialUrl.js';

const AddNetworkView = ({ walletConnector, network, addNetworkMutation, onCancel, onNetworkAdded, }) => {
    const { t } = useTranslation();
    const { iconUrls, name } = network;
    const [iconUrl] = iconUrls;
    const { mutate: addNetwork } = useMutation(addNetworkMutation, {
        onSuccess: onNetworkAdded,
    });
    const NetworkIcon = (props) => (jsx("img", Object.assign({}, props, { src: iconUrl, className: 'add-network-view__network-icon', alt: `${name} icon` })));
    return (jsxs("div", { "data-testid": 'add-network-view', className: 'add-network-view', children: [jsx(ModalHeader, { alignContent: 'bottom' }), jsxs("div", { className: 'add-network-view__body', children: [jsx(IconWithStatus, { Icon: NetworkIcon, iconSize: 64, InnerIcon: SvgError, variant: 'red' }), jsxs("div", { className: 'add-network-view__text-container', children: [jsx(Typography, { weight: 'bold', variant: 'body_normal', color: 'primary', copykey: 'dyn_add_network_view.title', className: 'add-network-view__title', children: t('dyn_add_network_view.title') }), jsx(Typography, { weight: 'regular', variant: 'body_small', color: 'secondary', copykey: 'dyn_add_network_view.description', className: 'add-network-view__description', children: t('dyn_add_network_view.description', {
                                    name: walletConnector.metadata.name,
                                }) })] }), jsxs("div", { className: 'add-network-view__actions', children: [jsx(Button, { expanded: true, buttonVariant: 'primary', onClick: () => onCancel(), dataTestId: 'add-network-view__cancel-button', children: jsx(Typography, { copykey: 'dyn_add_network_view.cancel_button.title', children: t('dyn_add_network_view.cancel_button.title') }) }), jsx(Button, { expanded: true, buttonVariant: 'brand-primary', onClick: () => addNetwork(), children: jsx(Typography, { copykey: 'dyn_add_network_view.add_button.title', children: t('dyn_add_network_view.add_button.title') }) })] })] })] }));
};

export { AddNetworkView };
