'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
require('@dynamic-labs/sdk-api-core');
require('../../utils/constants/values.cjs');
require('@dynamic-labs/utils');
require('../../../../_virtual/_tslib.cjs');
require('@dynamic-labs/multi-wallet');
require('../../shared/logger.cjs');
require('../../utils/constants/colors.cjs');
require('react-international-phone');
require('@dynamic-labs/iconic');
require('@dynamic-labs/wallet-connector-core');
require('../../context/ViewContext/ViewContext.cjs');
require('react');
require('@dynamic-labs/wallet-book');
require('../../store/state/loadingAndLifecycle.cjs');
require('../../shared/consts/index.cjs');
var pixelToRem = require('../../utils/functions/pixelToRem/pixelToRem.cjs');
require('../../config/ApiEndpoint.cjs');
require('../../store/state/user/user.cjs');
require('../../locale/locale.cjs');
require('../../store/state/projectSettings/projectSettings.cjs');
var classNames = require('../../utils/functions/classNames/classNames.cjs');
var StatusDot = require('../StatusDot/StatusDot.cjs');

const IconWithStatus = ({ Icon, InnerIcon, containerClassName, iconSize = 16, variant = 'green', }) => (jsxRuntime.jsxs("div", { className: classNames.classNames('icon-with-status__container', containerClassName || ''), children: [typeof Icon === 'string' ? (jsxRuntime.jsx("img", { style: {
                height: pixelToRem.pixelToRem(iconSize),
                width: pixelToRem.pixelToRem(iconSize),
            }, src: Icon, alt: '', className: 'icon' })) : (jsxRuntime.jsx(Icon, { style: {
                height: pixelToRem.pixelToRem(iconSize),
                width: pixelToRem.pixelToRem(iconSize),
            } })), InnerIcon ? (jsxRuntime.jsx("div", { className: 'inner-icon__container', children: jsxRuntime.jsx("div", { className: classNames.classNames('inner-icon', `inner-icon--${variant}`), children: jsxRuntime.jsx(InnerIcon, {}) }) })) : (jsxRuntime.jsx(StatusDot.StatusDot, { variant: variant, containerClassName: 'icon-with-status__status-dot' }))] }));

exports.IconWithStatus = IconWithStatus;
