type Address = `0x${string}`;
type Chain = {
    /** ID in number form */
    id: bigint;
    /** Human-readable name */
    name: string;
    /** Internal network name */
    network: string;
    /** Currency used by the chain */
    nativeCurrency: NativeCurrency;
    /** Collection of RPC endpoints */
    rpcUrls: {
        [key: string]: RpcUrls;
        default: RpcUrls;
        public: RpcUrls;
    };
    /** Flag for testnet networks */
    testnet?: boolean;
    /** Explorer links*/
    explorers?: {
        [key: string]: readonly string[];
    };
};
type NativeCurrency = {
    /** Token address */
    address: Address;
    /** Human-readable name */
    name: string;
    /** Currency symbol */
    symbol: string;
    /** Number of decimals */
    decimals: number;
};
type RpcUrls = {
    http: readonly string[];
    websocket?: readonly string[];
};

declare const devnet: {
    readonly id: bigint;
    readonly network: "devnet";
    readonly name: "Starknet Devnet";
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly testnet: true;
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly ["http://localhost:5050/rpc"];
        };
    };
};

declare const mainnet: {
    readonly id: bigint;
    readonly network: "mainnet";
    readonly name: "Starknet";
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly rpcUrls: {
        readonly alchemy: {
            readonly http: readonly ["https://starknet-mainnet.g.alchemy.com/v2"];
        };
        readonly blast: {
            readonly http: readonly ["https://starknet-mainnet.blastapi.io"];
        };
        readonly infura: {
            readonly http: readonly ["https://starknet-mainnet.infura.io/v3"];
        };
        readonly lava: {
            readonly http: readonly ["https://g.w.lavanet.xyz:443/gateway/strk/rpc-http"];
        };
        readonly nethermind: {
            readonly http: readonly ["https://rpc.nethermind.io/mainnet-juno"];
        };
        readonly reddio: {
            readonly http: readonly ["https://starknet-mainnet.reddio.com"];
        };
        readonly cartridge: {
            readonly http: readonly ["https://api.cartridge.gg/x/starknet/mainnet"];
        };
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly ["https://starknet-mainnet.public.blastapi.io/rpc/v0_7", "https://rpc.starknet.lava.build", "https://free-rpc.nethermind.io/mainnet-juno/v0_7"];
        };
    };
    readonly explorers: {
        readonly starkCompass: readonly ["https://www.starkcompass.com"];
        readonly starkscan: readonly ["https://starkscan.co"];
        readonly viewblock: readonly ["https://viewblock.io/starknet"];
        readonly voyager: readonly ["https://voyager.online"];
    };
};
declare const sepolia: {
    readonly id: bigint;
    readonly network: "sepolia";
    readonly name: "Starknet Sepolia Testnet";
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly testnet: true;
    readonly rpcUrls: {
        readonly blast: {
            readonly http: readonly ["https://starknet-sepolia.blastapi.io"];
        };
        readonly infura: {
            readonly http: readonly ["https://starknet-sepolia.infura.io/v3"];
        };
        readonly nethermind: {
            readonly http: readonly ["https://rpc.nethermind.io/sepolia-juno"];
        };
        readonly reddio: {
            readonly http: readonly ["https://starknet-sepolia.reddio.com"];
        };
        readonly cartridge: {
            readonly http: readonly ["https://api.cartridge.gg/x/starknet/sepolia"];
        };
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly ["https://starknet-sepolia.public.blastapi.io", "https://free-rpc.nethermind.io/sepolia-juno"];
        };
    };
    readonly explorers: {
        readonly starkscan: readonly ["https://sepolia.starkscan.co"];
        readonly voyager: readonly ["https://sepolia.voyager.online"];
    };
};

declare function getSlotChain(projectId: string): {
    readonly id: bigint;
    readonly network: `slot-${string}`;
    readonly name: string;
    readonly nativeCurrency: {
        readonly address: "0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7";
        readonly name: "Ether";
        readonly symbol: "ETH";
        readonly decimals: 18;
    };
    readonly testnet: true;
    readonly rpcUrls: {
        readonly default: {
            readonly http: readonly [];
        };
        readonly public: {
            readonly http: readonly [`https://api.cartridge.gg/x/${string}/katana`];
        };
    };
};

export { type Address, type Chain, type NativeCurrency, type RpcUrls, devnet, getSlotChain, mainnet, sepolia };
