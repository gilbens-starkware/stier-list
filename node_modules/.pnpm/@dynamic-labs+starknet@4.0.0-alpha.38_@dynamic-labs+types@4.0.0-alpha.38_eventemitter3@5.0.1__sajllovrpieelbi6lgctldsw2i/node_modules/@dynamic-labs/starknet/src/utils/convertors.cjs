'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var starknet = require('starknet');

const defaultTypedData = {
    primaryType: 'Message',
    types: {
        Message: [
            {
                name: 'message',
                type: 'felt',
            },
        ],
        StarkNetDomain: [
            {
                name: 'name',
                type: 'felt',
            },
            {
                name: 'chainId',
                type: 'felt',
            },
            {
                name: 'version',
                type: 'felt',
            },
        ],
    },
};
const formatTypedDataMessage = (inputMessage, chainId = starknet.constants.StarknetChainId.SN_MAIN) => {
    let nonce, domain;
    try {
        const { nonce: parsedNonce, domain: parsedDomain } = JSON.parse(inputMessage);
        nonce = parsedNonce;
        domain = parsedDomain;
    }
    catch (e) {
        nonce = inputMessage;
        domain = 'domain';
    }
    // Starknet strings could be at most 31 chars long
    const message = {
        message: nonce.substring(0, 31),
    };
    return Object.assign(Object.assign({}, defaultTypedData), { domain: {
            chainId,
            name: domain.substring(0, 31),
            version: '0.0.1',
        }, message });
};

exports.formatTypedDataMessage = formatTypedDataMessage;
