import { RequestFnCall, RpcMessage, RpcTypeToMessageMap, AccountChangeEventHandler, StarknetWindowObject } from '@starknet-io/types-js';
import { AccountInterface, ProviderInterface, ProviderOptions } from 'starknet';
import { Connector, ConnectorData, ConnectorIcons } from '../connector';
import { WebWalletStarknetWindowObject } from './starknetWindowObject/argentStarknetWindowObject';

interface WebWalletConnectorOptions {
    url?: string;
}
export declare class WebWalletConnector extends Connector {
    private _wallet;
    private _options;
    constructor(options?: WebWalletConnectorOptions);
    available(): boolean;
    ready(): Promise<boolean>;
    get id(): string;
    get name(): string;
    get icon(): ConnectorIcons;
    get wallet(): StarknetWindowObject;
    get title(): string;
    get subtitle(): string;
    connect(): Promise<ConnectorData>;
    request<T extends RpcMessage["type"]>(call: RequestFnCall<T>): Promise<RpcTypeToMessageMap[T]["result"]>;
    disconnect(): Promise<void>;
    account(provider: ProviderOptions | ProviderInterface): Promise<AccountInterface>;
    chainId(): Promise<bigint>;
    initEventListener(accountChangeCb: AccountChangeEventHandler): Promise<void>;
    removeEventListener(accountChangeCb: AccountChangeEventHandler): Promise<void>;
    private ensureWallet;
}
export type { WebWalletStarknetWindowObject };
