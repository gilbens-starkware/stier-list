'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../_virtual/_tslib.cjs');
var starknetkit = require('starknetkit');
var injected = require('starknetkit/injected');
var base = require('../base.cjs');

class ArgentX extends base.ArgentBase {
    constructor(opts) {
        super('Argent X', 'argentX', opts);
        this.overrideKey = 'argentx';
    }
    prompt() {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            const { connectorData, wallet } = yield starknetkit.connect({
                connectors: [new injected.InjectedConnector({ options: { id: this.id } })],
                modalMode: 'canAsk',
            });
            return {
                data: {
                    account: connectorData === null || connectorData === void 0 ? void 0 : connectorData.account,
                    chainId: connectorData === null || connectorData === void 0 ? void 0 : connectorData.chainId,
                },
                wallet: wallet !== null && wallet !== void 0 ? wallet : undefined,
            };
        });
    }
}

exports.ArgentX = ArgentX;
