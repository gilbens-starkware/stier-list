'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../_virtual/_tslib.cjs');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');
var utils = require('@dynamic-labs/utils');

class StarknetWallet extends walletConnectorCore.Wallet {
    getWalletAccount() {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            const account = yield this._connector.getWalletAccount();
            if (!account) {
                throw new Error('unable to retrieve Starknet wallet account');
            }
            utils.wrapMethodWithCallback(account, 'signMessage', (originalSignMessage, typedData) => _tslib.__awaiter(this, void 0, void 0, function* () {
                yield this.sync();
                return originalSignMessage(typedData);
            }));
            return account;
        });
    }
    getProvider() {
        return _tslib.__awaiter(this, void 0, void 0, function* () {
            const provider = yield this._connector.getProvider();
            utils.wrapMethodWithCallback(provider, 'callContract', (originalCallContract, call, blockIdentifier) => _tslib.__awaiter(this, void 0, void 0, function* () {
                yield this.sync();
                return originalCallContract(call, blockIdentifier);
            }));
            utils.wrapMethodWithCallback(provider, 'deployAccountContract', (originalDeployAccountContract, payload, details) => _tslib.__awaiter(this, void 0, void 0, function* () {
                yield this.sync();
                return originalDeployAccountContract(payload, details);
            }));
            return provider;
        });
    }
}

exports.StarknetWallet = StarknetWallet;
