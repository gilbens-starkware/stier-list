'use client'
import { __awaiter } from '../../_virtual/_tslib.js';
import { Wallet } from '@dynamic-labs/wallet-connector-core';
import { wrapMethodWithCallback } from '@dynamic-labs/utils';

class StarknetWallet extends Wallet {
    getWalletAccount() {
        return __awaiter(this, void 0, void 0, function* () {
            const account = yield this._connector.getWalletAccount();
            if (!account) {
                throw new Error('unable to retrieve Starknet wallet account');
            }
            wrapMethodWithCallback(account, 'signMessage', (originalSignMessage, typedData) => __awaiter(this, void 0, void 0, function* () {
                yield this.sync();
                return originalSignMessage(typedData);
            }));
            return account;
        });
    }
    getProvider() {
        return __awaiter(this, void 0, void 0, function* () {
            const provider = yield this._connector.getProvider();
            wrapMethodWithCallback(provider, 'callContract', (originalCallContract, call, blockIdentifier) => __awaiter(this, void 0, void 0, function* () {
                yield this.sync();
                return originalCallContract(call, blockIdentifier);
            }));
            wrapMethodWithCallback(provider, 'deployAccountContract', (originalDeployAccountContract, payload, details) => __awaiter(this, void 0, void 0, function* () {
                yield this.sync();
                return originalDeployAccountContract(payload, details);
            }));
            return provider;
        });
    }
}

export { StarknetWallet };
