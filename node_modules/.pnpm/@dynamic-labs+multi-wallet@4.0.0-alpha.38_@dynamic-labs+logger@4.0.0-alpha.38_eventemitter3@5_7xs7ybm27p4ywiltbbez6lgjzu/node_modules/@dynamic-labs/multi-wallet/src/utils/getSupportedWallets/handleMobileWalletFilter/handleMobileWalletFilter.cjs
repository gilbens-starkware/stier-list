'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var utils = require('@dynamic-labs/utils');
var walletConnectorCore = require('@dynamic-labs/wallet-connector-core');

const handleMobileWalletFilter = (connector) => {
    var _a, _b;
    if (!connector.metadata)
        return false;
    const { downloadLinks, deepLinks } = connector.metadata;
    /**
     * WalletConnect provides a "universal" and "native" deep link. They recommend using
     * the universal deep link over the native one due to UX differences, and our current
     * implementation uses only universal. This means we need to filter for wallets that
     * have a universal deep link available.
     */
    const hasWalletConnectLink = Boolean((_a = deepLinks === null || deepLinks === void 0 ? void 0 : deepLinks.mobile) === null || _a === void 0 ? void 0 : _a.universal) || Boolean((_b = deepLinks === null || deepLinks === void 0 ? void 0 : deepLinks.mobile) === null || _b === void 0 ? void 0 : _b.native);
    const shouldShowIfHadDownloadLink = !connector.isWalletConnect ||
        connector.key === 'walletconnect' ||
        hasWalletConnectLink;
    const walletLinks = walletConnectorCore.getWalletLinks(downloadLinks);
    if (utils.isIPad() || utils.isIPhone()) {
        const hasIOSLink = Boolean(walletLinks.ios);
        return hasIOSLink && shouldShowIfHadDownloadLink;
    }
    else {
        const hasAndroidLink = Boolean(walletLinks.android);
        return hasAndroidLink && shouldShowIfHadDownloadLink;
    }
};

exports.handleMobileWalletFilter = handleMobileWalletFilter;
