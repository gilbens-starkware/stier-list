'use client'
import { __awaiter } from '../../../_virtual/_tslib.js';
import { disconnect } from 'starknetkit';
import { StarknetWalletConnector } from '../../StarknetWalletConnector.js';

class ArgentBase extends StarknetWalletConnector {
    getConnectedAccounts() {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            if ((_a = this.walletData) === null || _a === void 0 ? void 0 : _a.account) {
                return [this.walletData.account];
            }
            let data;
            let wallet;
            this.logger.debug('[getConnectedAccounts] No existing account, attempting to silently connect');
            try {
                ({ data, wallet } = yield this.prompt({
                    silently: true,
                }));
            }
            catch (error) {
                this.logger.debug(`[getConnectedAccounts] Silent connect errored out: ${error}`);
                return [];
            }
            this.logger.debug(`[getConnectedAccounts] Connect returned account: ${data === null || data === void 0 ? void 0 : data.account}`);
            if (!(data === null || data === void 0 ? void 0 : data.account) || !wallet) {
                return [];
            }
            this.walletData = data;
            this.wallet = wallet;
            this.setupEventListeners();
            return [data.account];
        });
    }
    endSession() {
        const _super = Object.create(null, {
            endSession: { get: () => super.endSession }
        });
        return __awaiter(this, void 0, void 0, function* () {
            yield _super.endSession.call(this);
            yield disconnect();
        });
    }
}

export { ArgentBase };
