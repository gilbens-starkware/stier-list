'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var EventEmitter = require('eventemitter3');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var EventEmitter__default = /*#__PURE__*/_interopDefaultLegacy(EventEmitter);

// ATTENTION
// Everything below should be made public soon, but we need to plan this out first
// Main issues:
// 1. How should we map customer callback names to our dynamic event names?
//  -> Gui's suggestion: breaking change to rename customer callbacks so they fit these events names
// 2. We would have to remove these callbacks from the useCustomerCallbacks hook
/** Which events are accessible by our clients */
const externalEvents = [
    'emailVerificationResult',
    'embeddedWalletCreated',
    'logout',
    'walletAdded',
    'primaryWalletChanged',
    'primaryWalletNetworkChanged',
    'mfaCompletionSuccess',
    'mfaCompletionFailure',
];
// Full internal event emitter
const dynamicEvents = new EventEmitter__default["default"]();
// Limited public event emitter with subset of events
const publicDynamicEvents = dynamicEvents;

exports.dynamicEvents = dynamicEvents;
exports.externalEvents = externalEvents;
exports.publicDynamicEvents = publicDynamicEvents;
